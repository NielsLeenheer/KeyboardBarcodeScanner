class t{constructor(t){this._events={}}on(t,e){this._events[t]=this._events[t]||[],this._events[t].push(e)}emit(t,...e){let n=this._events[t];n&&n.forEach((t=>{t(...e)}))}}class e{static detect(t){return t.startsWith("http")?"qrcode":t.match(/^[0-9]+$/)&&8==t.length?"ean8":t.match(/^[0-9]+$/)&&12==t.length?"upca":t.match(/^[0-9]+$/)&&13==t.length?"ean13":t.match(/^M[0-9]/)?"aztec-code":t.length>32?"qrcode":void 0}}class n{#t;#e;constructor(e){this.#t=Object.assign({guessSymbology:!1,debug:!1},e||{}),this.#e={keydown:this.#n.bind(this),interval:null,emitter:new t,buffer:"",timestamp:0}}async connect(){this.#i()}async reconnect(){this.#i()}async disconnect(){}async#i(){document.addEventListener("keydown",this.#e.keydown),this.#e.interval=setInterval((()=>this.#s()),50),this.#e.emitter.emit("connected",{type:"keyboard"})}async#a(){document.removeEventListener("keydown",this.#e.keydown),clearInterval(this.#e.interval),this.#e.emitter.emit("disconnected")}#n(t){if("Clear"===t.key&&"NumLock"===t.code)return this.#e.buffer="",void(this.#e.timestamp=t.timeStamp);t.timeStamp-this.#e.timestamp>30&&(this.#r(this.#e.buffer),this.#e.buffer=""),1===t.key.length&&(this.#e.buffer+=t.key),this.#e.timestamp=t.timeStamp}#s(){0!==this.#e.buffer.length&&performance.now()-this.#e.timestamp>50&&(this.#r(this.#e.buffer),this.#e.buffer="")}#r(t){if(t.length>6){let n={value:t};if(this.#t.guessSymbology){let i=e.detect(t);i&&(n.symbology=i,n.guess=!0)}this.#e.emitter.emit("barcode",n)}}addEventListener(t,e){this.#e.emitter.on(t,e)}}export{n as default};
